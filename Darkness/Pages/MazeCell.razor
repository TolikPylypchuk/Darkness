<MudPaper Elevation="0" Outlined="true" Square="true"
          Class=@((this.IsPartial ? "maze-cell-partial" : "") + " maze-cell d-flex justify-center align-center")
          Style=@($"left: {this.X}%; top: {this.Y}%; width: {this.Width}%; " +
                  $"height: {this.Height}%; background-color: " +
                  (this.IsFinish ? Colors.DeepPurple.Default : Colors.Grey.Lighten2))>
    @if (this.Icon != null)
    {
        <MudIcon Icon="@this.Icon" Color="Color.Primary" Class="w-100 h-100" />
    }
</MudPaper>

@code {
    [Parameter]
    public double X { get; set; }

    [Parameter]
    public double Y { get; set; }

    [Parameter]
    public double Width { get; set; }

    [Parameter]
    public double Height { get; set; }

    [Parameter]
    public bool IsPartial { get; set; }

    [Parameter]
    public PlayerDirection? Direction { get; set; }

    [Parameter]
    public bool IsFinish { get; set; }

    private string? Icon { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        this.Icon = this.Direction switch
        {
            PlayerDirection.Left => Icons.Material.KeyboardArrowLeft,
            PlayerDirection.Right => Icons.Material.KeyboardArrowRight,
            PlayerDirection.Up => Icons.Material.KeyboardArrowUp,
            PlayerDirection.Down => Icons.Material.KeyboardArrowDown,
            _ => null
        };
    }
}
